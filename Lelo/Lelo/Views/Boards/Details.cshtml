@model Lelo.Models.Board

@{
    ViewBag.Title = "Details";
}

<style>
    body {
        font-family: 'Helvetica Neue', Arial, Helvetica, sans-serif;
    }

    .taskTittle {
        color: black;
        font-weight: bold;
    }

    .sortable li {
        margin: 8px;
        padding: 5px;
        font-size: 1.2em;
        /*width: 165px;*/
        background: aquamarine;
        border-radius: 8px;
    }

    .sortable {
        border: 1px solid #eee;
        width: 100%;
        min-height: 20px;
        list-style-type: none;
        margin: 0;
        padding: 5px 0 0 0;
        float: left;
        margin-right: 10px;
        border-radius: 8px;
    }

    .tableColumn {
        width: 200px;
    }

    .tableRound td {
        vertical-align: top;
        width: 220px;
    }

    .tableRound {
        border-collapse: separate;
        border-spacing: 8px;
    }

        .tableRound th {
            /*background: #eee;*/
            border-radius: 10px 10px 0px 0px;
        }

    .description {
        font-size: 11px;
    }
</style>

<div>
    <h3>@Model.Title</h3>
    <hr />
    @*<dl class="dl-horizontal">
            <dt>
                    @Html.DisplayNameFor(model => model.Team.Name)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Team.Name)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.User.Email)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.User.Email)
                </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Title)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Title)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Description)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Description)
            </dd>
        </dl>*@




    <table class="tableRound " style="width:auto">
        <thead>
            <tr>
                @foreach (var taskList in Model.TaskLists)
                {
                    <th class="tableColumn">
                        @taskList.Name
                        <a href="@Url.Action("EditList", "TaskLists", new { Id = taskList.Id })" class="taskTittle">
                            <span class="glyphicon glyphicon-pencil" style="float:right"></span>
                        </a>
                        <a href="@Url.Action("DeleteList", "TaskLists", new { Id = taskList.Id })" class="taskTittle">
                            <span class="glyphicon glyphicon-remove" style="float:right"></span>
                        </a>

                    </th>
                }
                <th>
                    @if (Model.TaskLists == null || Model.TaskLists.Count == 0)
                    {
                        <a href="@Url.Action("AddList", "TaskLists",  new { boardId = Model.Id })" class="btn btn-info btn-lg">
                            <span class="glyphicon glyphicon-plus" >Dodaj listę</span>
                        </a>
                    }
                    else
                    {
                        @Html.ActionLink("Dodaj listę", "AddList", "TaskLists", new { boardId = Model.Id }, null)
                    }

                </th>
            </tr>
        </thead>
        @{
            int i = 1;

            <tr id="listRow">
                @foreach (var item in Model.TaskLists)
                {
                    <td>

                        <ul class="connectedSortable sortable" listId="@item.Id">
                            @foreach (var item2 in item.LeloTasks.OrderBy(x => x.Position))
                            {
                                <li taskId="@item2.Id">
                                    @Html.ActionLink(@item2.Name, "Details", "LeloTasks", new { Id = item2.Id }, new { @class = "taskTittle" })

                                    <a href="@Url.Action("EditTask", "Boards", new { Id = item2.Id, BoardId = Model.Id })" class="taskTittle">
                                        <span class="glyphicon glyphicon-pencil" style="float:right"></span>
                                    </a>
                                    <a href="@Url.Action("DeleteTask", "LeloTasks", new { Id = item2.Id, BoardId = Model.Id })" class="taskTittle">
                                        <span class="glyphicon glyphicon-remove" style="float:right"></span>
                                    </a>

                                    <br />
                                    <span class="description">
                                        @item2.Description <br />
                                    </span>

                                </li>
                            }
                        </ul>
                        @Html.ActionLink("Dodaj kartę...", "AddTask", "LeloTasks", new { listId = item.Id, boardId = Model.Id }, new { @class = "btn-default btn", @style = "width:100%; margin-top:10px" })
                    </td>
                    i++;
                }
                <td></td>
            </tr>
        }
    </table>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Powrót do listy", "Index")
</p>


@section Scripts{
    <script>
        $(document).ready(function () {
            console.log("ready!");

            $(function () {
                $(".connectedSortable").sortable({
                    connectWith: ".connectedSortable",
                    update: function (item, ui) {
                        var listId = $(this).attr('listId');
                        var taskId = ui.item.attr('taskId');
                        var order = [];

                        $('#listRow ul[listId="' + listId + '"] li').each(function () {
                            order.push($(this).attr('taskId'))
                        })


                        $.ajax({
                            method: "POST",
                            url: "/LeloTasks/UpdateList",
                            data: {
                                taskId: taskId,
                                listId: listId,
                                order: order
                            }
                        })
                          .done(function (msg) {
                              //alert("Data Saved: " + msg);
                          });


                    }
                }).disableSelection()
            });
        });
    </script>
}