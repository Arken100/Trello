@model Lelo.Models.Board

@{
    ViewBag.Title = "Details";
}

<style>
    .sortable li {
        margin: 3px 0px 10px 10px;
        padding: 5px;
        font-size: 1.2em;
        width: 165px;
        background: aquamarine;
        border-radius: 8px;
    }

    .sortable {
        border: 1px solid #eee;
        width: 100%;
        min-height: 20px;
        list-style-type: none;
        margin: 0;
        padding: 5px 0 0 0;
        float: left;
        margin-right: 10px;
        border-radius: 8px;
    }

    .tableColumn {
        width: 200px;
    }
</style>



<h2>Details</h2>

<div>
    <h4>Board</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Team.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Team.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.User.Email)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.User.Email)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>
    </dl>

    <table class="table table-bordered" style="width:auto">
        <thead>
            <tr>
                @foreach (var task in Model.TaskLists)
                {
                    <th class="tableColumn">@task.Name</th>
                }
            </tr>
        </thead>
        @{
            int i = 1;

            <tr id="listRow">
                @foreach (var item in Model.TaskLists)
                {
                    <td>
                        <div class="container">

                            <ul class="connectedSortable sortable" listId="@item.Id">
                                @foreach (var item2 in item.LeloTasks.OrderBy(x => x.Position))
                                {
                                    <li taskId="@item2.Id">
                                        @Html.ActionLink(@item2.Name, "Details", "LeloTasks", new { Id = item2.Id }, null)
                                        <br />
                                        @item2.Description <br />

                                    </li>
                                }
                            </ul>
                            @Html.ActionLink("+", "AddTask", "LeloTasks", new { listId = item.Id }, new { @class = "btn-default btn", @style = "width:100%; margin-top:10px" })
                        </div>
                    </td>
                    i++;
                }
            </tr>
        }
    </table>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>


@section Scripts{
    <script>
        $(document).ready(function () {
            console.log("ready!");

            $(function () {
                $(".connectedSortable").sortable({
                    connectWith: ".connectedSortable",
                    update: function (item, ui) {
                        var listId = $(this).attr('listId');
                        var taskId = ui.item.attr('taskId');
                        var order = [];

                        $('#listRow ul[listId="' + listId + '"] li').each(function () {
                            order.push($(this).attr('taskId'))
                        })


                        $.ajax({
                            method: "POST",
                            url: "/LeloTasks/UpdateList",
                            data: {
                                taskId: taskId,
                                listId: listId,
                                order: order
                            }
                        })
                          .done(function (msg) {
                              //alert("Data Saved: " + msg);
                          });


                    }
                }).disableSelection()
            });
        });
    </script>
}